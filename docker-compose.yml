services:
  nginx:
    container_name: nginx
    build:
      args:
        USER: ${USER}
        UID: ${USER_ID}
        GROUP: ${USER}
        GID: ${USER_ID}
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - "${WWW_PATH}:/var/www/html"
    depends_on:
      - app
      - db
      - redis
      - minio
      - mailpit
    networks:
      - hard

  app:
    image: app
    container_name: app
    build:
      args:
        USER: ${USER}
        UID: ${USER_ID}
        GROUP: ${USER}
        GID: ${USER_ID}
      context: .
      dockerfile: ./docker/php-fpm/Dockerfile
    volumes:
      - ./docker/php-fpm/php.ini:/usr/local/etc/php/php.ini
      - "${WWW_PATH}:/var/www/html"
    depends_on:
      - db
      - redis
      - minio
      - mailpit
    networks:
      - hard

  queue:
    image: app
    container_name: queue
    volumes:
      - "${WWW_PATH}:/var/www/html"
    depends_on:
      - db
      - redis
      - minio
      - mailpit
    networks:
      - hard
    command: |
      bash -c "sleep 5; ls | parallel --line-buffer 'php {}/artisan "${QUEUE_COMMAND}" >> /var/www/html/{}/storage/logs/queue-$(date +%F).log'"

  scheduler:
    image: app
    container_name: scheduler
    volumes:
      - "${WWW_PATH}:/var/www/html"
    depends_on:
      - db
      - redis
      - minio
      - mailpit
    networks:
      - hard
    command: |
      bash -c "ls | parallel --line-buffer '
      sleep 5
      while [ true ]
      do
        php {}/artisan schedule:run --verbose --no-interaction &
        sleep 60
      done'"

  redis:
    image: redis
    container_name: redis
    restart: unless-stopped
    volumes:
      - "redis_data:/data"
    ports:
      - "6379:6379"
    networks:
      - hard

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    restart: unless-stopped
    volumes:
      - "minio_data:/data"
    environment:
      MINIO_ROOT_USER: "${AWS_ACCESS_KEY_ID}"
      MINIO_ROOT_PASSWORD: "${AWS_SECRET_ACCESS_KEY}"
      MINIO_BROWSER_REDIRECT_URL: http://minio.localhost/ui
    command: server --console-address ":9001" /data
    networks:
      - hard

  mailpit:
    image: axllent/mailpit
    container_name: mailpit
    restart: unless-stopped
    volumes:
      - "mailpit_data:/data"
    ports:
      - 8025:8025
      - 1025:1025
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    networks:
      - hard

volumes:
  mysql_data:
    driver: local
  pgsql_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local
  mailpit_data:
    driver: local

networks:
  hard:
    driver: bridge
