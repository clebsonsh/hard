#!/usr/bin/env bash
# this script is inspired by Laravel Sail
# https://github.com/laravel/sail/blob/1.x/bin/sail

HARD_PATH="/home/${USER}/code/hard"

. $HARD_PATH/.env

# Determine if stdout is a terminal...
if test -t 1; then
    # Determine if colors are supported...
    ncolors=$(tput colors)

    if test -n "$ncolors" && test "$ncolors" -ge 8; then
        BOLD="$(tput bold)"
        YELLOW="$(tput setaf 3)"
        GREEN="$(tput setaf 2)"
        NC="$(tput sgr0)"
    fi
fi

# Function that prints the available commands...
function display_help {
    echo "Laravel Hard"
    echo
    echo "${YELLOW}Usage:${NC}" >&2
    echo "  hard [project] COMMAND [arguments]"
    echo
    echo "${YELLOW}docker-compose Commands:${NC}"
    echo "  ${GREEN}hard up${NC}        Start the application"
    echo "  ${GREEN}hard up -d${NC}     Start the application in the background"
    echo "  ${GREEN}hard ps${NC}        Display the status of all containers"
    echo
    echo "${YELLOW}Container CLI:${NC}"
    echo "  ${GREEN}hard bash${NC}        Start a shell session within the application container"
    echo
    echo "${YELLOW}Artisan Commands:${NC}"
    echo "  ${GREEN}hard [project] artisan ...${NC}          Run an Artisan command"
    echo "  ${GREEN}hard [project] artisan queue:work${NC}"
    echo
    echo "${YELLOW}PHP Commands:${NC}"
    echo "  ${GREEN}hard [project] php ...${NC}   Run a snippet of PHP code"
    echo "  ${GREEN}hard [project] php -v${NC}"
    echo
    echo "${YELLOW}Composer Commands:${NC}"
    echo "  ${GREEN}hard [project] composer ...${NC}                       Run a Composer command"
    echo "  ${GREEN}hard [project] composer require laravel/sanctum${NC}"
    echo
    echo "${YELLOW}Node Commands:${NC}"
    echo "  ${GREEN}hard [project] node ...${NC}         Run a Node command"
    echo "  ${GREEN}hard [project] node --version${NC}"
    echo
    echo "${YELLOW}NPM Commands:${NC}"
    echo "  ${GREEN}hard [project] npm ...${NC}        Run a npm command"
    echo "  ${GREEN}hard [project] npx${NC}            Run a npx command"
    echo "  ${GREEN}hard [project] npm run prod${NC}"
    echo
    echo "${YELLOW}Yarn Commands:${NC}"
    echo "  ${GREEN}hard [project] yarn ...${NC}        Run a Yarn command"
    echo "  ${GREEN}hard [project] yarn run prod${NC}"
    echo
    exit 1

if [ ! -f $HARD_PATH/docker-compose.yml ]; then
    echo "ERROR: Couldn't find a 'docker-compose.yml' file in the current directory."
    display_help
fi

if [ ! -f $HARD_PATH/.env ]; then
    echo "ERROR: Couldn't find a '.env' file in the current directory."
    display_help
fi

if [ ! -d $WWW_PATH ]; then
    echo "ERROR: Couldn't find a 'www' directory in the current directory."
    display_help
fi

case "$1" in
    up|down|build|ps) YES=1;;
    *)                YES=0;;
esac

if [ $YES = 1 ]; then
    docker compose -f "$HARD_PATH/docker-compose.yml" "$@"
    exit 0
fi

case "$1" in
    bash|composer) YES=1;;
    *)             YES=0;;
esac

if [ $YES = 1 ]; then
    docker compose -f "$HARD_PATH/docker-compose.yml" exec app "$@"
    exit 0
fi

if [ "$1" != "" ] && [ -d $WWW_PATH/"$1" ]; then
    PROJECT="$1"
    shift 1
    docker compose -f "$HARD_PATH/docker-compose.yml" exec -it --workdir "/var/www/html/$PROJECT" app "$@"
    exit 0
fi

display_help
exit 1
