#!/usr/bin/env bash
# this is inspired by Laravel Sail
# https://github.com/laravel/sail/blob/1.x/bin/sail

HARD_PATH="/home/${USER}/code/hard"

. $HARD_PATH/.env

if [ "$1" = "up" ] && [ "$2" = "-d" ]; then
    $(cd $HARD_PATH; docker compose up -d)
    exit 0
fi

if [ "$1" = "up" ]; then
    $(cd $HARD_PATH; docker compose up)
    exit 0
fi

if [ "$1" = "down" ]; then
    $(cd $HARD_PATH; docker compose down)
    exit 0
fi

if [ "$1" != "" ] && [ -d $WWW_PATH/"$1" ]; then
    PROJECT="$1"
    shift 1
else
    echo "Please provide a valid project from $WWW_PATH"
    echo $(ls $WWW_PATH)
    echo "Usage: hard <project> <command> <args>"
    exit 1
fi

# Proxy PHP commands to the "php" binary on the application container...
if [ "$1" = "artisan" ]; then
    shift 1

    docker compose -f "$HARD_PATH/docker-compose.yml" exec -it app php "$PROJECT"/artisan "$@"

# Proxy Composer commands to the "composer" binary on the application container...
elif [ "$1" = "composer" ]; then
    shift 1

    docker compose -f "$HARD_PATH/docker-compose.yml" exec -it app composer --working-dir "$PROJECT" "$@"

# Proxy Composer commands to the "npm" binary on the application container...
elif [ "$1" = "npm" ]; then
    shift 1

    docker compose -f "$HARD_PATH/docker-compose.yml" exec -it app npm --prefix "$PROJECT" "$@"

# Proxy Composer commands to the "yarn" binary on the application container...
elif [ "$1" = "yarn" ]; then
    shift 1

    docker compose -f "$HARD_PATH/docker-compose.yml" exec -it app yarn --cwd "$PROJECT" "$@"
fi
